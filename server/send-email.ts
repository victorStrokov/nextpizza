'use server';

import nodemailer from 'nodemailer';
import validator from 'validator';

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ SMTP (–Ø–Ω–¥–µ–∫—Å)
 * @param to ‚Äî email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
 * @param subject ‚Äî —Ç–µ–º–∞ –ø–∏—Å—å–º–∞
 * @param htmlContent ‚Äî –≥–æ—Ç–æ–≤—ã–π HTML –ø–∏—Å—å–º–∞
 */

export async function sendEmail(
  to: string,
  subject: string,
  htmlContent: string,
  textContent?: string
) {
  if (!validator.isEmail(to)) {
    throw new Error(`Invalid email address: ${to}`);
  }

  const transporter = nodemailer.createTransport({
    host: 'smtp.yandex.ru',
    port: 465,
    secure: true,
    auth: {
      user: process.env.YANDEX_EMAIL,
      pass: process.env.YANDEX_APP_PASSWORD,
    },
  });
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SMTP
  await transporter.verify();

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø–∏—Å—å–º–∞
  const plainText = htmlContent
    .replace(/<style[^>]*>[\s\S]*?<\/style>/gi, '') // —É–±–∏—Ä–∞–µ–º —Å—Ç–∏–ª–∏
    .replace(/<[^>]+>/g, '') // —É–±–∏—Ä–∞–µ–º –≤—Å–µ HTML-—Ç–µ–≥–∏
    .replace(/\s+/g, ' ') // —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    .trim(); // –æ–±—Ä–µ–∑–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
  const info = await transporter.sendMail({
    from: `"Next Pizza" <${process.env.YANDEX_EMAIL}>`,
    to,
    subject,
    html: htmlContent,
    text: textContent ?? plainText,
  });

  console.log('üì® Email sent successfully:', info.messageId);
  console.log('üì¶ SMTP response:', info);

  return info;
}
