'use client';

import { useForm, FormProvider } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';

import {
  CheckoutSidebar,
  Container,
  Title,
  CheckoutAdressForm,
  CheckoutCart,
  CheckoutPersonalForm,
} from '@/shared/components';
import { CheckoutFormSchema, CheckoutFormValues } from '@/shared/constants';
import { useCart } from '@/shared/hooks';
import { cn } from '@/shared/lib/utils';
import { createOrder } from '@/app/actions';
import toast from 'react-hot-toast';
import React from 'react';
import { useSession } from 'next-auth/react';
import { Api } from '@/shared/services/api-client';

export default function CheckoutPage() {
  const [submitting, setSubmitting] = React.useState(false);
  const { data: session } = useSession();
  const { totalAmount, items, updateItemQuantity, removeCartItem, loading } =
    useCart();
  const onClickCountButton = (
    id: number,
    quantity: number,
    type: 'plus' | 'minus'
  ) => {
    const newQuantity = type === 'plus' ? quantity + 1 : quantity - 1;

    updateItemQuantity(id, newQuantity);
  };

  const form = useForm<CheckoutFormValues>({
    resolver: zodResolver(CheckoutFormSchema), // —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    defaultValues: {
      email: '',
      firstName: '',
      lastName: '',
      phone: '',
      address: '',
      comment: '',
    },
  });

  // –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –∏ –≤—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
  React.useEffect(() => {
    // —Ñ-–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–æ—Ä–º—É –∏
    async function fetchUserInfo() {
      const data = await Api.auth.getMe();
      const [firstName, lastName] = data.fullName.split(' '); // —Ä–∞–∑–±–∏–≤–∞–µ—Ç fullName –Ω–∞ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é  —Å –ø—Ä–æ–±–µ–ª–æ–º
      form.setValue('firstName', firstName);
      form.setValue('lastName', lastName);
      form.setValue('email', data.email);
    }
    if (session) {
      fetchUserInfo();
    }
  }, [form, session]);

  const onSubmit = async (data: CheckoutFormValues) => {
    try {
      setSubmitting(true);
      const url = await createOrder(data);
      toast.error('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! üìù –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—É... ', {
        icon: '‚úÖ',
      });

      if (url) {
        location.href = url;
      }
    } catch (err) {
      console.log(err);
      setSubmitting(false);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑', { icon: '‚ùå' });
    }
  };

  return (
    <Container className='mt-10'>
      <Title
        text='–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞'
        className='font-extrabold mb-8 text-[36px]'
      />
      <FormProvider {...form}>
        <form onSubmit={form.handleSubmit(onSubmit)}>
          {/* —ç—Ç–æ—Ç div –¥–µ–ª–∞–µ—Ç –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ —á—Ç–æ –±—ã –ø–æ–º–µ—Å—Ç–∏–ª—Å—è –±–ª–æ–∫ */}
          <div className='flex gap-10'>
            {/* –õ–µ–≤—ã–π –±–ª–æ–∫ */}
            <div className='flex flex-col gap-10 flex-1 mb-20'>
              <CheckoutCart
                onClickCountButton={onClickCountButton}
                removeCartItem={removeCartItem}
                items={items}
                loading={loading}
              />
              <CheckoutPersonalForm
                className={cn({ 'opacity-40 pointer-events-none': loading })}
                // {'opacity-40 pointer-events-none' : loading} —ç—Ç–æ—Ç –æ–±—ä–µ–∫–∏ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π —Ñ–æ—Ä–º—É –µ—Å–ª–∏ loading = true
              />
              <CheckoutAdressForm
                className={cn({ 'opacity-40 pointer-events-none': loading })}
              />
            </div>

            {/* –ü—Ä–∞–≤—ã–π –±–ª–æ–∫ */}
            <div className='w-[459px]'>
              <CheckoutSidebar
                totalAmount={totalAmount}
                loading={loading || submitting}
              />
            </div>
          </div>
        </form>
      </FormProvider>
    </Container>
  );
}
