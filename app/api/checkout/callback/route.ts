import { PaymentCallBackData } from '@/@types/yookassa';
import { prisma } from '@/prisma/prisma-client';
import { OrderSuccessTemplate } from '@/shared/components/shared/email-templates/order-success';
import { sendEmail } from '@/shared/lib';
import { CartItemDTO } from '@/shared/services/dto/cart.dto';
import { OrderStatus } from '@prisma/client';
import { NextRequest, NextResponse } from 'next/server';

export async function POST(req: NextRequest) {
  try {
    // –í–´–¢–ê–°–ö–ò–í–ê–ï–ú –î–ê–ù–ù–´–ï –ò–ó –ó–ê–ü–†–û–°–ê
    const body = (await req.json()) as PaymentCallBackData;
    console.log('Webhook body:', body); // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    // –ò—â–µ–º –∑–∞–∫–∞–∑ –∏ –º–µ–Ω—è–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å –∏ –∫–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç
    const order = await prisma.order.findFirst({
      where: {
        id: Number(body.object.metadata.order_id), // —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω–µ—Ç –ø–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º YOOKASSA –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
      }, // —Ç–∞–∫ –∂–µ –≤–µ—Ä–Ω–µ—Ç—Å—è –µ–º–µ–π–ª –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∞–∫ –∫–∞–∫ –æ—Ä–¥–µ—Ä —Ö—Ä–∞–Ω–∏—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
      // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å include —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —é–∑–µ—Ä–∞ –∏ —Ç.–¥.
      //   include: {
      //     user: true, // –≤–∫–ª—é—á–∞–µ–º —é–∑–µ—Ä–∞ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
      //   },
    });

    if (!order) {
      return NextResponse.json({ error: 'Order not found' }, { status: 404 });
    }

    const isSucceeded = body.object.status === 'succeeded'; // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞

    // –∫–æ–≥–¥–∞ –∑–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
    await prisma.order.update({
      where: {
        id: order.id,
      },
      data: {
        status: isSucceeded ? OrderStatus.SUCCEEDED : OrderStatus.CANCELLED, // –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π
      },
    });

    const items = JSON.parse(order?.items as string) as CartItemDTO[]; // –ø–∞—Ä—Å–∏–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∑–∞–∫–∞–∑–∞

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞
    if (isSucceeded) {
      await sendEmail(
        order.email,
        'Next Pizza | –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω',
        OrderSuccessTemplate({
          orderId: order.id,
          items,
          totalAmount: order.totalAmount,
        })
      );
    } else {
      // –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –Ω–µ –ø—Ä–æ—à–µ–ª, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
    }
  } catch (error) {
    console.error('[Checkout Callback] Error:', error);
    return NextResponse.json(
      { error: 'Internal Server Error' },
      { status: 500 }
    );
  }

  return NextResponse.json({ success: true }, { status: 200 });
}
// TODO: –î–æ–±–∞–≤–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤–µ–±—Ö—É–∫–æ–≤

// –ò–ª–∏ –ø—Ä–∏–∫—Ä—É—Ç–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ

// –ê –º–æ–∂–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö
// –ö–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å –∑–∞–º—É—Ç–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Yookassa API –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É —ç—Ç–æ —Å–æ–±—Ä–∞—Ç—å –∫–∞–∫ —á–∞—Å—ã. ‚è±

// –ê –ø–æ–∫–∞ —á—Ç–æ ‚Äî –º–æ–∂–µ—Ç, —Ö–æ—á–µ—à—å –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ? –ò–ª–∏ Telegram-–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∫–µ, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏—Ü—Ü—É? üçï –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –∫–æ—Ñ–µ –ø–æ–ø–∏—Ç—å –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è —Ç–µ–º, —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç
